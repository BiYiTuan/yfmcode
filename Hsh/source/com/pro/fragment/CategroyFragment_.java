//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations 3.2.
//


package com.pro.fragment;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.ListView;
import com.pro.adapter.CategoryAdapter_;
import com.pro.adapter.CategoryBigAdapter_;
import com.pro.hsh.R.layout;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class CategroyFragment_
    extends com.pro.fragment.CategroyFragment
    implements HasViews, OnViewChangedListener
{

    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public View findViewById(int id) {
        if (contentView_ == null) {
            return null;
        }
        return contentView_.findViewById(id);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(layout.fragment_category, container, false);
        }
        return contentView_;
    }

    @Override
    public void onDestroyView() {
        contentView_ = null;
        super.onDestroyView();
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
        cbigadapter = CategoryBigAdapter_.getInstance_(getActivity());
        cadapter = CategoryAdapter_.getInstance_(getActivity());
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static CategroyFragment_.FragmentBuilder_ builder() {
        return new CategroyFragment_.FragmentBuilder_();
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        category_detail_list = ((ListView) hasViews.findViewById(com.pro.hsh.R.id.category_detail_list));
        category_big_list = ((ListView) hasViews.findViewById(com.pro.hsh.R.id.category_big_list));
        if (category_big_list!= null) {
            category_big_list.setOnItemClickListener(new OnItemClickListener() {


                @Override
                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                    CategroyFragment_.this.category_big_list(position);
                }

            }
            );
        }
        init();
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<CategroyFragment_.FragmentBuilder_, com.pro.fragment.CategroyFragment>
    {


        @Override
        public com.pro.fragment.CategroyFragment build() {
            CategroyFragment_ fragment_ = new CategroyFragment_();
            fragment_.setArguments(args);
            return fragment_;
        }

    }

}
